"""
Django settings for html5games project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-y_yo=!$*kfx5ngk$)po4zi)#$yfdo$-a0ww8_1g8_ha@t!!sgy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'djangocms_admin_style',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'cms',
    'menus',
    'treebeard',
    'sekizai',
    'filer',
    'easy_thumbnails',
    'djangocms_text_ckeditor',
    'djangocms_link',
    'djangocms_file',
    'djangocms_picture',
    'djangocms_video',
    'djangocms_frontend',
    'djangocms_frontend.contrib.accordion',
    'djangocms_frontend.contrib.alert',
    'djangocms_frontend.contrib.badge',
    'djangocms_frontend.contrib.card',
    'djangocms_frontend.contrib.carousel',
    'djangocms_frontend.contrib.collapse',
    'djangocms_frontend.contrib.content',
    'djangocms_frontend.contrib.grid',
    'djangocms_frontend.contrib.image',
    'djangocms_frontend.contrib.jumbotron',
    'djangocms_frontend.contrib.link',
    'djangocms_frontend.contrib.listgroup',
    'djangocms_frontend.contrib.media',
    'djangocms_frontend.contrib.tabs',
    'djangocms_frontend.contrib.utilities',
    
    # 多语言支持
    'modeltranslation',
    
    # 支付相关
    'django_countries',
    'ordered_model',
    'plans',
    'payments',
    'plans_payments',
    
    # 自定义应用
    'games',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',  # 多语言支持
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cms.middleware.user.CurrentUserMiddleware',
    'cms.middleware.page.CurrentPageMiddleware',
    'cms.middleware.toolbar.ToolbarMiddleware',
    'cms.middleware.language.LanguageCookieMiddleware',
    # Django CMS 5.0 新增中间件
    'cms.middleware.utils.ApphookReloadMiddleware',
    # 自定义中间件
    'games.middleware.BrowserLanguageDetectionMiddleware',
]

ROOT_URLCONF = 'html5games.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'django.template.context_processors.csrf',
                'django.template.context_processors.tz',
                'django.template.context_processors.i18n',
                'cms.context_processors.cms_settings',
                'sekizai.context_processors.sekizai',
                'games.context_processors.advertisements',
                'games.context_processors.website_settings',
            ],
            # Django CMS 5.0 需要的模板库
            'libraries': {
                'cms_tags': 'cms.templatetags.cms_tags',
                'menu_tags': 'menus.templatetags.menu_tags',
                'sekizai_tags': 'sekizai.templatetags.sekizai_tags',
            },
        },
    },
]

WSGI_APPLICATION = 'html5games.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# Django Plans Payments 基础配置
# 移除 PAYMENTS_HOST 配置，改为从数据库读取
# PAYMENTS_HOST = 'localhost:8000'

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# 多语言设置
LANGUAGES = [
    ('en', 'English'),
    ('zh', '中文'),
]

CMS_LANGUAGES = {
    1: [
        {
            'code': 'en',
            'name': 'English',
            'fallbacks': ['zh'],
            'public': True,
        },
        {
            'code': 'zh',
            'name': '中文',
            'fallbacks': ['en'],
            'public': True,
        },
    ],
    'default': {
        'fallbacks': ['en'],
        'redirect_on_fallback': True,
        'public': True,
        'hide_untranslated': False,
    },
}

LOCALE_PATHS = [BASE_DIR / 'locale']


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'static'
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django CMS 设置
SITE_ID = 1
CMS_CONFIRM_VERSION4 = True
CMS_CONFIRM_VERSION5 = True

CMS_TEMPLATES = [
    ('games/home.html', '首页模板'),
    ('games/game_detail.html', '游戏详情页模板'),
    ('games/category_detail.html', '分类详情页模板'),
    ('games/category_list.html', '分类列表页模板'),
    ('games/game_list.html', '游戏列表页面'),
    ('games/profile.html', '用户资料页面'),
    ('fullwidth.html', '全宽页面'),
]

# Django CMS 5.0 新增配置
CMS_RENDERER = 'default'
CMS_CACHE_PREFIX = 'html5games-cms'
CMS_CONTENT_CACHE_DURATION = 60
# 修复toolbar_pool路径问题
CMS_TOOLBARS = []  # Django CMS 5.0不再需要此设置，使用cms.toolbar.utils.get_toolbars()代替

CMS_PERMISSION = True
CMS_PLACEHOLDER_CONF = {}

# 缩略图设置
THUMBNAIL_HIGH_RESOLUTION = True
THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters',
)

# Frontend 设置
DJANGOCMS_FRONTEND_USE_SELECT2 = True
DJANGOCMS_FRONTEND_TAB_STYLE = "nav-tabs"
DJANGOCMS_FRONTEND_GRID_SIZE = 12
DJANGOCMS_FRONTEND_GRID_CONTAINERS = [
    ('container', 'Container'),
    ('container-fluid', 'Fluid container')
]
DJANGOCMS_FRONTEND_GRID_CONTAINER_MARGIN = "my-3"
# 默认使用Bootstrap 5
DJANGOCMS_FRONTEND_FRAMEWORK = "bootstrap5"
# 为Django CMS 5.0优化
DJANGOCMS_FRONTEND_ADMIN_CSS = {
    'all': (
        'djangocms_frontend/css/admin.css',
    )
}

# 前端模板目录
DJANGOCMS_FRONTEND_TEMPLATES_DIR = [
    os.path.join(BASE_DIR, 'templates/games/frontend/bootstrap5'),  # Bootstrap 5模板
    os.path.join(BASE_DIR, 'templates/games'),  # 游戏应用模板
]

# 在文件末尾添加支付日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/payments.log'),
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'payment_callbacks': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'payment_process': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'payment_security': {
            'handlers': ['file', 'console'],
            'level': 'WARNING',
            'propagate': True,
        },
    },
}

# 确保日志目录存在
if not os.path.exists(os.path.join(BASE_DIR, 'logs')):
    os.makedirs(os.path.join(BASE_DIR, 'logs'))
